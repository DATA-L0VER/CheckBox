HTML:


<main>
  <div class="btn-container">
    <button>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <path class="checkmark" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 13l4 4L19 7" />
      </svg>
      <svg class="explosion explosion-lg" viewBox="0 0 108 108" xmlns="http://www.w3.org/2000/svg" xml:space="preserve"
        style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2">
        <circle class="alternate" cx="20.977" cy="20.977" r="7.451" />
        <circle class="alternate" cx="86.293" cy="20.977" r="7.451" />
        <circle cx="7.451" cy="53.636" r="7.451" />
        <circle cx="53.636" cy="99.822" r="7.451" />
        <circle cx="99.822" cy="53.636" r="7.451" />
        <circle cx="53.636" cy="7.451" r="7.451" />
        <path class="alternate"
          d="M91.563 91.563a7.454 7.454 0 0 0 0-10.537 7.456 7.456 0 0 0-10.537 0 7.456 7.456 0 0 0 0 10.537 7.454 7.454 0 0 0 10.537 0Z" />
        <circle class="alternate" cx="20.977" cy="86.293" r="7.451" />
      </svg>
      <svg class="explosion explosion-sm" viewBox="0 0 108 108" xmlns="http://www.w3.org/2000/svg" xml:space="preserve"
        style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2">
        <circle class="alternate" cx="20.977" cy="20.977" r="7.451" />
        <circle class="alternate" cx="86.293" cy="20.977" r="7.451" />
        <circle cx="7.451" cy="53.636" r="7.451" />
        <circle cx="53.636" cy="99.822" r="7.451" />
        <circle cx="99.822" cy="53.636" r="7.451" />
        <circle cx="53.636" cy="7.451" r="7.451" />
        <path class="alternate"
          d="M91.563 91.563a7.454 7.454 0 0 0 0-10.537 7.456 7.456 0 0 0-10.537 0 7.456 7.456 0 0 0 0 10.537 7.454 7.454 0 0 0 10.537 0Z" />
        <circle class="alternate" cx="20.977" cy="86.293" r="7.451" />
      </svg>
    </button>
  </div>
  </main>

</body>
<audio id="bell" src="https://freesound.org/data/previews/320/320181_274531-lq.mp3"></audio>




CSS:




*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  --bkg-light: 60 100% 99.8%;
  --accent1-light: 230 57.8% 82.4%;
  --accent2-light: 351 60% 83.3%;
  
  --bkg-dark: 230 33.3% 20.6%;
  --accent1-dark: 230 47.8% 62.4%;
  --accent2-dark: 351 50% 63.3%;
}

:root {
  --bkg: var(--bkg-light);
  --accent1: var(--accent1-light);
  --accent2: var(--accent2-light);
}

@media (prefers-color-scheme: dark) {
  :root {
    --bkg: var(--bkg-dark);
    --accent1: var(--accent1-dark);
    --accent2: var(--accent2-dark);
  }
}


main {
  min-height: 100vh;
  display: grid;
  place-items: center;
  background-color: hsl(var(--bkg));
  position: relative;
  z-index: 1;
}

.btn-container {
   transform: scale(8);
}

button {
  width: 24px;
  height: 24px;
  background-color: hsl(var(--bkg));
  cursor: pointer;
  border: none;
  border-radius: .25rem;
  position: relative;
  box-shadow: 2px 4px 5px hsl(var(--accent1)/.8), -2px -4px 6px hsl(var(--accent2)/.4);
  transition: background-color 400ms ease-in-out, box-shadow 400ms ease-in-out;
}

button:is(:hover, :focus){
  box-shadow: none;
}

button.checked {
  background-color: transparent;
  box-shadow: none;
}

button::after {
  content: '';
  position: absolute;
  background: linear-gradient(321deg, hsl(var(--accent1)), hsl(var(--accent2)) );
  inset: -3px;
  z-index: -1;
  border-radius: .4rem;
}

.checkmark {
  stroke: hsl(var(--bkg));
  stroke-dasharray: 19.79899024963379;
  stroke-dashoffset: 19.79899024963379;
}

.checked .checkmark {
  animation: check 350ms cubic-bezier(0.83, 0.05, 0.62, 1.0) forwards;
}

@keyframes check {
  to {
    stroke-dashoffset: 0;
  }
}

circle {
  fill: hsl( var(--accent1));
}

.alternate {
  fill: hsl( var(--accent2));
}

.explosion {
  transition: transform .3s cubic-bezier(0,.81,.56,1);
  position: absolute;
  inset: -.25rem;
  opacity: 0;
}

.checked .explosion-lg.exploding {
  animation: explodeLg .8s ease-in-out .1s;
}

.checked .explosion-sm.exploding  {
  animation: explodeSm .64s ease-out .2s;
}

 @keyframes explodeSm {
    0% {
        opacity: 0;
        transform: scale(.01) rotate(-4deg)
    }

    30%,60% {
      opacity: .16;
    }

    60% {
      transform: scale(1.6) rotate(-10deg);
    }
    80% {
      opacity: 0;
    }
}

 @keyframes explodeLg {
    0% {
        opacity: 0;
        transform: scale(.01) rotate(5deg);
    }

    20%,60% {
      opacity: 1;
    }

    40% {
      transform: scale(2) rotate(10deg);
    }

    80% {
      opacity: 0;
    }
}






JAVASCRIPT:




  const bell = document.querySelector('#bell');
  let soundTimer;
  function toggleBtnAnimation(e) {
    e.currentTarget.classList.toggle('checked');
    e.currentTarget.querySelectorAll('.explosion').forEach((expl) => expl.classList.toggle('exploding'));
    if (e.currentTarget.classList.contains('checked')) {
      clearTimeout(soundTimer);
      bell.currentTime = 0;
      bell.volume = 0.4;
      soundTimer = setTimeout(() => bell.play(), 400)
    }
  }
  const btns = document.querySelectorAll('button');
  btns.forEach(btn => btn.addEventListener('click', toggleBtnAnimation));
